(function(G){function K(a,f,C,b,Y,E,Z){var F=Math.pow,D=Math.sqrt,g,A,h,c,d,e,B,X;g=D(F(C-a,2)+F(b-f,2));A=D(F(Y-C,2)+F(E-b,2));h=Z*g/(g+A);c=Z-h;d=C+h*(a-Y);e=b+h*(f-E);B=C-c*(a-Y);X=b-c*(f-E);return[d,e,B,X]}var I=[];function L(B,C,D,P,F){var E=G.color.parse(F);E.a=typeof P=="number"?P:0.3;E.normalize();E=E.toString();C.beginPath();C.moveTo(B[0][0],B[0][1]);var O=B.length;for(var A=0;A<O;A++){C[B[A][3]].apply(C,B[A][2])}C.stroke();C.lineWidth=0;C.lineTo(B[O-1][0],D);C.lineTo(B[0][0],D);C.closePath();if(P!==false){C.fillStyle=E;C.fill()}}function H(C,B,A,D){if(B===void 0||(B!=="bezier"&&B!=="quadratic")){B="quadratic"}B=B+"CurveTo";if(I.length==0){I.push([A[0],A[1],D.concat(A.slice(2)),B])}else{if(B=="quadraticCurveTo"&&A.length==2){D=D.slice(0,2).concat(A);I.push([A[0],A[1],D,B])}else{I.push([A[2],A[3],D.concat(A.slice(2)),B])}}}function J(Z,T,X){if(X.splines.show!==true){return}var W=[],B=X.splines.tension||0.5,A,V,Y,C=X.datapoints.points,F=X.datapoints.pointsize,D=Z.getPlotOffset(),E=C.length,U=[];I=[];if(E/F<4){G.extend(X.lines,X.splines);return}for(A=0;A<E;A+=F){V=C[A];Y=C[A+1];if(V==null||V<X.xaxis.min||V>X.xaxis.max||Y<X.yaxis.min||Y>X.yaxis.max){continue}U.push(X.xaxis.p2c(V)+D.left,X.yaxis.p2c(Y)+D.top)}E=U.length;for(A=0;A<E-2;A+=2){W=W.concat(K.apply(this,U.slice(A,A+6).concat([B])))}T.save();T.strokeStyle=X.color;T.lineWidth=X.splines.lineWidth;H(T,"quadratic",U.slice(0,4),W.slice(0,2));for(A=2;A<E-3;A+=2){H(T,"bezier",U.slice(A,A+4),W.slice(2*A-2,2*A+2))}H(T,"quadratic",U.slice(E-2,E),[W[2*E-10],W[2*E-9],U[E-4],U[E-3]]);L(I,T,Z.height()+10,X.splines.fill,X.color);T.restore()}G.plot.plugins.push({init:function(A){A.hooks.drawSeries.push(J)},options:{series:{splines:{show:false,lineWidth:2,tension:0.5,fill:false}}},name:"spline",version:"0.8.2"})})(jQuery);