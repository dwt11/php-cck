(function(E){var F={series:{curvedLines:{active:false,apply:false,fit:false,curvePointFactor:20,fitPointDist:undefined}}};function D(H){H.hooks.processOptions.push(A);function A(J,G){if(G.series.curvedLines.active){J.hooks.processDatapoints.unshift(B)}}function B(T,Z,V){var X=V.points.length/V.pointsize;var b=0.5;if(Z.curvedLines.apply==true&&Z.originSeries===undefined&&X>(1+b)){if(Z.lines.fill){var G=C(V,Z.curvedLines,1),a=C(V,Z.curvedLines,2);V.pointsize=3;V.points=[];var U=0;var W=0;var Y=0;var S=2;while(Y<G.length||U<a.length){if(G[Y]==a[U]){V.points[W]=G[Y];V.points[W+1]=G[Y+1];V.points[W+2]=a[U+1];U+=S;Y+=S}else{if(G[Y]<a[U]){V.points[W]=G[Y];V.points[W+1]=G[Y+1];V.points[W+2]=W>0?V.points[W-1]:null;Y+=S}else{V.points[W]=a[U];V.points[W+1]=W>1?V.points[W-2]:null;V.points[W+2]=a[U+1];U+=S}}W+=3}}else{if(Z.lines.lineWidth>0){V.points=C(V,Z.curvedLines,1);V.pointsize=2}}}}function C(Ad,Aa,j){var Av=Ad.points,p=Ad.pointsize;var Ah=Aa.curvePointFactor*(Av.length/p);var Ac=new Array;var Ab=new Array;var n=-1;var Af=-1;var Ar=0;if(Aa.fit){var Ai;if(typeof Aa.fitPointDist=="undefined"){var Ag=Av[0];var s=Av[Av.length-p];Ai=(s-Ag)/(500*100)}else{Ai=Aa.fitPointDist}for(var Al=0;Al<Av.length;Al+=p){var i;var h;n=Al;Af=Al+j;i=Av[n]-Ai;h=Av[n]+Ai;var b=2;while(i==Av[n]||h==Av[n]){i=Av[n]-(Ai*b);h=Av[n]+(Ai*b);b++}Ac[Ar]=i;Ab[Ar]=Av[Af];Ar++;Ac[Ar]=Av[n];Ab[Ar]=Av[Af];Ar++;Ac[Ar]=h;Ab[Ar]=Av[Af];Ar++}}else{for(var Al=0;Al<Av.length;Al+=p){n=Al;Af=Al+j;Ac[Ar]=Av[n];Ab[Ar]=Av[Af];Ar++}}var Ak=Ac.length;var Ae=new Array();var d=new Array();Ae[0]=0;Ae[Ak-1]=0;d[0]=0;for(var Al=1;Al<Ak-1;++Al){var Aj=(Ac[Al+1]-Ac[Al-1]);if(Aj==0){return[]}var G=(Ac[Al]-Ac[Al-1])/Aj;var Au=G*Ae[Al-1]+2;Ae[Al]=(G-1)/Au;d[Al]=(Ab[Al+1]-Ab[Al])/(Ac[Al+1]-Ac[Al])-(Ab[Al]-Ab[Al-1])/(Ac[Al]-Ac[Al-1]);d[Al]=(6*d[Al]/(Ac[Al+1]-Ac[Al-1])-G*d[Al-1])/Au}for(var Ar=Ak-2;Ar>=0;--Ar){Ae[Ar]=Ae[Ar]*Ae[Ar+1]+d[Ar]}var At=(Ac[Ak-1]-Ac[0])/(Ah-1);var k=new Array;var Ap=new Array;var Am=new Array;k[0]=Ac[0];Ap[0]=Ab[0];Am.push(k[0]);Am.push(Ap[0]);for(Ar=1;Ar<Ah;++Ar){k[Ar]=k[0]+Ar*At;var Ao=Ak-1;var a=0;while(Ao-a>1){var As=Math.round((Ao+a)/2);if(Ac[As]>k[Ar]){Ao=As}else{a=As}}var Aq=(Ac[Ao]-Ac[a]);if(Aq==0){return[]}var An=(Ac[Ao]-k[Ar])/Aq;var z=(k[Ar]-Ac[a])/Aq;Ap[Ar]=An*Ab[a]+z*Ab[Ao]+((An*An*An-An)*Ae[a]+(z*z*z-z)*Ae[Ao])*(Aq*Aq)/6;Am.push(k[Ar]);Am.push(Ap[Ar])}return Am}}E.plot.plugins.push({init:D,options:F,name:"curvedLines",version:"0.5"})})(jQuery);